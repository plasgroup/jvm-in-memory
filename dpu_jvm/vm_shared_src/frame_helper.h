#ifndef VM_FRAME_HELPER_H
#define VM_FRAME_HELPER_H

#include <stdint.h>
#include "function.h"


// For colorful printing
#define CYAN    "\033[36m"      /* Cyan */
#define RESET   "\033[0m"
#define RED     "\033[31m"      /* Red */
#define ORANGE  "\033[33m"   /*orange*/


#define SLOTSIZE sizeof(uint8_t*)
#ifdef INMEMORY
#define SLOTPT (uint32_t*)
#define MSLOTP (uint32_t __mram_ptr*)
#else
#define SLOTPT (uint64_t*)
#define MSLOTP (uint64_t __mram_ptr *)
#endif


#pragma region Frame


// Indexer
#define FRAME_LOC(FP_BEGIN, OFFSET) (FP_BEGIN + OFFSET) 


#pragma region FRAME_OFFSETS
// Offsets
#define FRAME_OFFSET_FUNC_PT 0
#define FRAME_OFFSET_LAST_FRAME_PT FRAME_OFFSET_FUNC_PT + sizeof(struct function**)
#define FRAME_OFFSET_LAST_FRAME_EVAL_STACK_TOP_PT FRAME_OFFSET_LAST_FRAME_PT + sizeof(uint8_t**)
#define FRAME_OFFSET_EXT_FIELD1_LOCAL_VARS_OFFSET FRAME_OFFSET_LAST_FRAME_EVAL_STACK_TOP_PT + sizeof(uint8_t**)
#define FRAME_OFFSET_EXT_FIELD1_SAVED_REG_OFFSET FRAME_OFFSET_EXT_FIELD1_LOCAL_VARS_OFFSET + sizeof(short)
#define FRAME_OFFSET_EXT_FIELD2_FRAME_SIZE FRAME_OFFSET_EXT_FIELD1_SAVED_REG_OFFSET + sizeof(short)
#define FRAME_OFFSET_EXT_FIELD2_RETAIN1 FRAME_OFFSET_EXT_FIELD2_FRAME_SIZE + sizeof(short)
#define FRAME_OFFSET_PARAMS FRAME_OFFSET_EXT_FIELD2_RETAIN1 + sizeof(short)
#define FRAME_OFFSET_LOCAL_VARS(FP_BEGIN) FRAME_GET_OFFSET_EXT_FIELD1_LOCAL_VARS_OFFSET(FP_BEGIN)
#define FRAME_OFFSET_SAVED_REG(FP_BEGIN)  FRAME_GET_OFFSET_EXT_FIELD1_SAVED_REG_OFFSET(FP_BEGIN)
#define FRAME_OFFSET_EVAL_STACK(FP_BEGIN) FRAME_OFFSET_SAVED_REG(FP_BEGIN) + FRAME_SAVED_REGS_SIZE 
#define FRAME_OFFSET_RETURN_ADDR(FP_BEGIN) FRAME_GET_OFFSET_EXT_FIELD2_FRAME_SIZE(FP_BEGIN) - sizeof(void*)
#pragma endregion





// Saved Regs Area: currently 0's reg (unused)
#define FRAME_SAVED_REGS_SIZE 0
//#define FRAME_SAVED_REGS_OFFSET_LAST_FRAME_END 0
//#define FRAME_OFFSET_SAVED_REG_LAST_FRAME_END(FP_BEGIN)  FRAME_GET_OFFSET_OFFSET_FIELD1_SAVED_REG + FRAME_SAVED_REGS_OFFSET_LAST_FRAME_END


#pragma region FRAME_GETTER
//// Getter
#define FRAME_GET_FUNC_PT(FP_BEGIN) *(struct function **)FRAME_LOC(FP_BEGIN, FRAME_OFFSET_FUNC_PT)
#define FRAME_GET_LAST_FRAME_PT(FP_BEGIN) *(uint8_t **)FRAME_LOC(FP_BEGIN, FRAME_OFFSET_LAST_FRAME_PT)
#define FRAME_GET_LAST_FRAME_EVAL_STACK_TOP_PT(FP_BEGIN) *(uint8_t **)FRAME_LOC(FP_BEGIN, FRAME_OFFSET_LAST_FRAME_EVAL_STACK_TOP_PT)

#define FRAME_GET_OFFSET_EXT_FIELD1_LOCAL_VARS_OFFSET(FP_BEGIN) *(short *)FRAME_LOC(FP_BEGIN, FRAME_OFFSET_EXT_FIELD1_LOCAL_VARS_OFFSET)
#define FRAME_GET_OFFSET_EXT_FIELD1_SAVED_REG_OFFSET(FP_BEGIN) *(short *)FRAME_LOC(FP_BEGIN, FRAME_OFFSET_EXT_FIELD1_SAVED_REG_OFFSET)
#define FRAME_GET_OFFSET_EXT_FIELD2_FRAME_SIZE(FP_BEGIN) *(short *)FRAME_LOC(FP_BEGIN, FRAME_OFFSET_EXT_FIELD2_FRAME_SIZE)
#define FRAME_GET_OFFSET_EXT_FIELD2_RETAIN(FP_BEGIN) *(short *)FRAME_LOC(FP_BEGIN,  FRAME_OFFSET_EXT_FIELD2_RETAIN1)

#define FRAME_GET_PARAMS(FP_BEGIN) (uint8_t *)FRAME_LOC(FP_BEGIN,  FRAME_OFFSET_PARAMS)
#define FRAME_GET_LOCAL_VARS(FP_BEGIN) (uint8_t *)FRAME_LOC(FP_BEGIN,  FRAME_OFFSET_LOCAL_VARS(FP_BEGIN))
#define FRAME_GET_SAVED_REGS(FP_BEGIN) (uint8_t *)FRAME_LOC(FP_BEGIN,  FRAME_OFFSET_SAVED_REG(FP_BEGIN))
#define FRAME_GET_EVAL_STACK(FP_BEGIN) (uint8_t *)FRAME_LOC(FP_BEGIN,  FRAME_OFFSET_EVAL_STACK(FP_BEGIN))
#define FRAME_GET_RET_ADDR(FP_BEGIN) *(void **)FRAME_LOC(FP_BEGIN,  FRAME_OFFSET_RETURN_ADDR(FP_BEGIN))

#pragma endregion



//helper functions

void print_frame(uint8_t* frame);
uint8_t* create_new_vmframe(struct function_thunk func_thunk, uint8_t** stack_top_pt, uint8_t* return_addr, uint8_t* last_frame_eval_stack_top, int pc, uint8_t* current_vm_frame);

#pragma endregion

#endif